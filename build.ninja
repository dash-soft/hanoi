# Specify the compiler (clang in this case)
cxx = clang++

# Compiler flags
cxxflags = -std=c++17 -Wall

# Linker flags (including libraries)
ldflags = -lncurses -pthread

# Specify source files
sources = main.cc hanoi.cc rod.cc

# Specify output binary
executable = hanoi

# Rule for compiling each .cc file into an object file
rule compile
  command = $cxx $cxxflags -c $in -o $out
  description = Compiling $in with clang

# Rule for linking the object files into the final executable
rule link
  command = $cxx $in -o $out $ldflags
  description = Linking $out with clang

# Build object files
build main.o: compile main.cc
build hanoi.o: compile hanoi.cc
build rod.o: compile rod.cc

# Link object files to create the executable
build $executable: link main.o hanoi.o rod.o

# Clean target
rule clean
  command = rm -f *.o $executable
  description = Cleaning

build clean: clean

